// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nox.Reference.Data.World;

#nullable disable

namespace Nox.Reference.Data.World.Migrations
{
    [DbContext(typeof(WorldDbContext))]
    [Migration("20230425151100_AddVatNumberValidations")]
    partial class AddVatNumberValidations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Nox.Reference.Data.World.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BanknotesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoinsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DecimalDigits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DecimalSeparator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MajorUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinorUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SpaceBetweenAmountAndSymbol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SymbolOnLeft")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThousandsSeparator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BanknotesId");

                    b.HasIndex("CoinsId");

                    b.HasIndex("MajorUnitId");

                    b.HasIndex("MinorUnitId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyFrequentUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrencyUsageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyUsageId");

                    b.ToTable("CurrencyFrequentUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyRareUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrencyUsageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyUsageId");

                    b.ToTable("CurrencyRareUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CurrencyUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.MajorCurrencyUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MajorCurrencyUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.MinorCurrencyUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MajorValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MinorCurrencyUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.VatNumberDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VerificationApi")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("VatNumberDefinition");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.VatNumberValidationRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputMask")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaximumLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Regex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidationFormatDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("VatNumberDefinitionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VatNumberDefinitionId");

                    b.ToTable("VatNumberValidationRule");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.Currency", b =>
                {
                    b.HasOne("Nox.Reference.Data.World.CurrencyUsage", "Banknotes")
                        .WithMany()
                        .HasForeignKey("BanknotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nox.Reference.Data.World.CurrencyUsage", "Coins")
                        .WithMany()
                        .HasForeignKey("CoinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nox.Reference.Data.World.MajorCurrencyUnit", "MajorUnit")
                        .WithMany()
                        .HasForeignKey("MajorUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nox.Reference.Data.World.MinorCurrencyUnit", "MinorUnit")
                        .WithMany()
                        .HasForeignKey("MinorUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banknotes");

                    b.Navigation("Coins");

                    b.Navigation("MajorUnit");

                    b.Navigation("MinorUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyFrequentUsage", b =>
                {
                    b.HasOne("Nox.Reference.Data.World.CurrencyUsage", null)
                        .WithMany("Frequent")
                        .HasForeignKey("CurrencyUsageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyRareUsage", b =>
                {
                    b.HasOne("Nox.Reference.Data.World.CurrencyUsage", null)
                        .WithMany("Rare")
                        .HasForeignKey("CurrencyUsageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nox.Reference.Data.World.VatNumberValidationRule", b =>
                {
                    b.HasOne("Nox.Reference.Data.World.VatNumberDefinition", null)
                        .WithMany("ValidationRules")
                        .HasForeignKey("VatNumberDefinitionId");

                    b.OwnsOne("Nox.Reference.Data.World.Checksum", "Checksum", b1 =>
                        {
                            b1.Property<int>("VatNumberValidationRuleId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("Algorithm")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ChecksumDigit")
                                .HasColumnType("TEXT");

                            b1.Property<int?>("Modulus")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Weights")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("VatNumberValidationRuleId");

                            b1.ToTable("VatNumberValidationRule");

                            b1.WithOwner()
                                .HasForeignKey("VatNumberValidationRuleId");
                        });

                    b.Navigation("Checksum");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.CurrencyUsage", b =>
                {
                    b.Navigation("Frequent");

                    b.Navigation("Rare");
                });

            modelBuilder.Entity("Nox.Reference.Data.World.VatNumberDefinition", b =>
                {
                    b.Navigation("ValidationRules");
                });
#pragma warning restore 612, 618
        }
    }
}
