// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nox.Reference.Data.IpAddress;

#nullable disable

namespace Nox.Reference.Data.IpAddress.Migrations
{
    [DbContext(typeof(IpAddressDbContext))]
    partial class IpAddressDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Nox.Reference.Data.IpAddress.IpAddress", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("EntityId");

                    b.ToTable("IpAddress");
                });

            modelBuilder.Entity("Nox.Reference.Data.IpAddress.IpAddress", b =>
                {
                    b.OwnsOne("Nox.Reference.Data.IpAddress.IpAddressChunk", "EndAddress", b1 =>
                        {
                            b1.Property<int>("IpAddressEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("End")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("Start")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IpAddressEntityId");

                            b1.ToTable("IpAddress");

                            b1.WithOwner()
                                .HasForeignKey("IpAddressEntityId");
                        });

                    b.OwnsOne("Nox.Reference.Data.IpAddress.IpAddressChunk", "StartAddress", b1 =>
                        {
                            b1.Property<int>("IpAddressEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("End")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("Start")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IpAddressEntityId");

                            b1.ToTable("IpAddress");

                            b1.WithOwner()
                                .HasForeignKey("IpAddressEntityId");
                        });

                    b.Navigation("EndAddress")
                        .IsRequired();

                    b.Navigation("StartAddress")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
