// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nox.Reference.Data.IpAddress;

#nullable disable

namespace Nox.Reference.Data.IpAddress.Migrations
{
    [DbContext(typeof(IpAddressDbContext))]
    [Migration("20230615062058_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Nox.Reference.Data.IpAddress.IpAddress", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EntityId");

                    b.ToTable("IpAddress");
                });

            modelBuilder.Entity("Nox.Reference.Data.IpAddress.IpAddress", b =>
                {
                    b.OwnsOne("Nox.Reference.Data.IpAddress.IpAddressChunk", "StartAddress", b1 =>
                        {
                            b1.Property<int>("IpAddressEntityId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("IpAddressEntityId");

                            b1.ToTable("IpAddress");

                            b1.WithOwner()
                                .HasForeignKey("IpAddressEntityId");
                        });

                    b.Navigation("StartAddress")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
