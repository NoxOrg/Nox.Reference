// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nox.Reference.Data;

#nullable disable

namespace Nox.Reference.Data.Migrations
{
    [DbContext(typeof(NoxReferenceDbContext))]
    [Migration("20230413181509_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Nox.Reference.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BanknotesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoinsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DecimalDigits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DecimalSeparator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MajorUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MinorUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SpaceBetweenAmountAndSymbol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SymbolOnLeft")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThousandsSeparator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BanknotesId");

                    b.HasIndex("CoinsId");

                    b.HasIndex("MajorUnitId");

                    b.HasIndex("MinorUnitId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyFrequentUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrencyUsageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyUsageId");

                    b.ToTable("CurrencyFrequentUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyRareUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrencyUsageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyUsageId");

                    b.ToTable("CurrencyRareUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CurrencyUsage");
                });

            modelBuilder.Entity("Nox.Reference.Data.MacAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IEEERegistry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MacPrefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MacAddress");
                });

            modelBuilder.Entity("Nox.Reference.Data.MajorCurrencyUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MajorCurrencyUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.MinorCurrencyUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MajorValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MinorCurrencyUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.Currency", b =>
                {
                    b.HasOne("Nox.Reference.Data.CurrencyUsage", "Banknotes")
                        .WithMany()
                        .HasForeignKey("BanknotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nox.Reference.Data.CurrencyUsage", "Coins")
                        .WithMany()
                        .HasForeignKey("CoinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nox.Reference.Data.MajorCurrencyUnit", "MajorUnit")
                        .WithMany()
                        .HasForeignKey("MajorUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nox.Reference.Data.MinorCurrencyUnit", "MinorUnit")
                        .WithMany()
                        .HasForeignKey("MinorUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Banknotes");

                    b.Navigation("Coins");

                    b.Navigation("MajorUnit");

                    b.Navigation("MinorUnit");
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyFrequentUsage", b =>
                {
                    b.HasOne("Nox.Reference.Data.CurrencyUsage", null)
                        .WithMany("Frequent")
                        .HasForeignKey("CurrencyUsageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyRareUsage", b =>
                {
                    b.HasOne("Nox.Reference.Data.CurrencyUsage", null)
                        .WithMany("Rare")
                        .HasForeignKey("CurrencyUsageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nox.Reference.Data.CurrencyUsage", b =>
                {
                    b.Navigation("Frequent");

                    b.Navigation("Rare");
                });
#pragma warning restore 612, 618
        }
    }
}
